#!/usr/bin/php
<?php
// ------------------------------------------------------------
// 
// BAN for IP
// 
// T.Kabu/MyDNS.JP           http://www.MyDNS.JP/
// Future Versatile Group    http://www.fvg-on.net/
// 
// ------------------------------------------------------------
?>
<?php
// ----------------------------------------------------------------------
// Init Routine
// ----------------------------------------------------------------------
require(__DIR__."/ban4ipd_init.php");
?>
<?php
// ----------------------------------------------------------------------
// Sub Routine
// ----------------------------------------------------------------------
require(__DIR__."/ban4ipd_ban.php");
?>
<?php
// ----------------------------------------------------------------------
// Sub Routine
// ----------------------------------------------------------------------
require(__DIR__."/ban4ipd_unban.php");
?>
<?php
// ----------------------------------------------------------------------
// Sub Routine
// ----------------------------------------------------------------------
require(__DIR__."/ban4ipd_exec.php");
?>
<?php
// ----------------------------------------------------------------------
// Sub Routine
// ----------------------------------------------------------------------
function ban4ip_optioncheck($BAN4IPD_CONF, $BAN4IPC_OPTIONS)
{
    // 現在日時を設定
    $BAN4IPD_CONF['logtime'] = local_time();
    
    // 必須パラメータ
    // 対象IPアドレス(--address)が設定されているなら
    if (isset($BAN4IPC_OPTIONS['address']))
    {
        // IPアドレスをBAN対象として設定
        $BAN4IPD_CONF['target_address'] = $BAN4IPC_OPTIONS['address'];
    }
    // 対象IPアドレスが設定されていないなら
    else
    {
        print "--address is not set!?"."\n";
        // 終わり
        exit -1;
    }
    // 対象IPアドレスを/で分割して配列に設定
    $TARGET_ADDRESS = explode("/", $BAN4IPD_CONF['target_address']);
    // 対象IPアドレスがIPアドレスでないなら
    if (filter_var($TARGET_ADDRESS[0], FILTER_VALIDATE_IP) === FALSE)
    {
        print $BAN4IPD_CONF['target_address']." is not IP address!?"."\n";
        // 終わり
        exit -1;
    }
    
    // BAN時間[s](--bantime)が設定されているなら
    if (isset($BAN4IPC_OPTIONS['bantime']))
    {
        // BAN時間[s]として設定
        $BAN4IPD_CONF['bantime'] = $BAN4IPC_OPTIONS['bantime'];
    }
    // BAN時間[s](--bantime)が設定されていないなら、システムのデフォルト設定を使用
    // BAN時間[s]が数字ではないなら(もっと厳密にチェックする？)
    if (!is_numeric($BAN4IPD_CONF['bantime']))
    {
        print $BAN4IPD_CONF['bantime']." is not integer!?"."\n";
        // 終わり
        exit -1;
    }
    
    
    // 対象プロトコル(--protcol)が設定されているなら
    if (isset($BAN4IPC_OPTIONS['protcol']))
    {
        // 対象プロトコルをBAN対象として設定
        $BAN4IPD_CONF['target_protcol'] = $BAN4IPC_OPTIONS['protcol'];
        
        // 対象プロトコルが文字列指定でないか、tcpでもudpでもallでもないなら
        if (!is_string($BAN4IPD_CONF['target_protcol']) || ($BAN4IPD_CONF['target_protcol'] != 'tcp' && $BAN4IPD_CONF['target_protcol'] != 'udp' && $BAN4IPD_CONF['target_protcol'] != 'all'))
        {
            print $BAN4IPD_CONF['target_protcol']." is not support protcol!?"."\n";
            // 終わり
            exit -1;
        }
    }
    //対象プロトコルが設定されていないなら
    else
    {
        // 全プロトコル(all)をBAN対象として設定
        $BAN4IPD_CONF['target_protcol'] = 'all';
    }
    
    
    // 対象ポート(--port)が設定されているなら
    if (isset($BAN4IPC_OPTIONS['port']))
    {
        // 対象ポートをBAN対象として設定
        $BAN4IPD_CONF['target_port'] = $BAN4IPC_OPTIONS['port'];
        
        // 対象ポートが数字ではなく(＝文字列指定の)、ポート番号が引けないか、'all'でないなら
        if (!is_numeric($BAN4IPD_CONF['target_port']) && (getservbyname($BAN4IPD_CONF['target_port'],'tcp') == FALSE && $BAN4IPD_CONF['target_port'] != 'all'))
        {
            print $BAN4IPD_CONF['target_port']." is not support port!?"."\n";
            // 終わり
            exit -1;
        }
    }
    //対象ポートが設定されていないなら
    else
    {
        // 全ポート(-1)をBAN対象として設定
        $BAN4IPD_CONF['target_port'] = 'all';
    }
    
    
    // 必須パラメータ
    // 対象ルール(--rule)が設定されているなら
    if (isset($BAN4IPC_OPTIONS['rule']))
    {
        // 対象ルールをBAN対象として設定
        $BAN4IPD_CONF['target_rule'] = $BAN4IPC_OPTIONS['rule'];
    }
    // 対象ルールが設定されていないなら
    else
    {
        print "--rule is not set!?"."\n";
        // 終わり
        exit -1;
    }
    // 対象ルールが文字列指定だった場合、DROPでもREJECTでもLOGでもないなら
    if (!is_string($BAN4IPD_CONF['target_rule']) || ($BAN4IPD_CONF['target_rule'] != 'DROP' && $BAN4IPD_CONF['target_rule'] != 'REJECT' && $BAN4IPD_CONF['target_rule'] != 'LOG'))
    {
        print $BAN4IPD_CONF['target_rule']." is not rule!?"."\n";
        // 終わり
        exit -1;
    }
    
    
    // 対象サービス(--service)が設定されているなら
    if (isset($BAN4IPC_OPTIONS['service']))
    {
        // 対象サービスをBAN対象として設定
        $BAN4IPD_CONF['target_service'] = $BAN4IPC_OPTIONS['service'];
    }
    // 対象サービスが設定されていないなら
    else
    {
        // 対象サービスをBAN対象として設定
        $BAN4IPD_CONF['target_service'] = 'manual';
    }
    
    // 対象プロトコルと対象ポートが片方だけallなら
    if (
        ($BAN4IPD_CONF['target_protcol'] != 'all' && $BAN4IPD_CONF['target_port'] == 'all') ||
        ($BAN4IPD_CONF['target_protcol'] == 'all' && $BAN4IPD_CONF['target_port'] != 'all')
        )
    {
        print "protcol(".$BAN4IPD_CONF['target_protcol'].") and port(".$BAN4IPD_CONF['target_port'].") mismatch!?"."\n";
        // 終わり
        exit -1;
    }
    
    // --------------------------------
    
    // ホスト名の逆引きがONになっていたら
    if ($BAN4IPD_CONF['hostname_lookup'] == 1)
    {
        // 対象IPアドレスから対象ホスト名を取得して設定
        $BAN4IPD_CONF['target_hostname'] = gethostbyaddr($TARGET_ADDRESS[0]);
    }
    
    // UNIXソケットを開く
    $BAN4IPD_CONF['socket'] = socket_create(AF_UNIX, SOCK_DGRAM, 0);
    // UNIXソケットが開けなかったら
    if ($BAN4IPD_CONF['socket'] == FALSE )
    {
        // エラーメッセージに、UNIXソケットを開けない旨を設定
        $ERR_MSG = date("Y-m-d H:i:s", local_time())." ban4ip[".getmypid()."]: WARN [".$BAN4IPD_CONF['target_service']."] Cannot create socket!? (".$BAN4IPD_CONF['conf_file'].")"."\n";
        print $ERR_MSG;
        // 終わり
        exit -1;
    }
    // UNIXソケットをノンブロッキングモードに変更できなかったら
    if (socket_set_nonblock($BAN4IPD_CONF['socket']) == FALSE)
    {
        // エラーメッセージに、UNIXソケットをノンブロッキングモードに変更できない旨を設定
        $ERR_MSG = date("Y-m-d H:i:s", local_time())." ban4ip[".getmypid()."]: WARN [".$BAN4IPD_CONF['target_service']."] Cannot set nonblock socket!? (".$BAN4IPD_CONF['conf_file'].")"."\n";
        print $ERR_MSG;
        // 終わり
        exit -1;
    }
    // UNIXソケットの接続を確立できないなら
    if (@socket_connect($BAN4IPD_CONF['socket'], $BAN4IPD_CONF['socket_file']) == FALSE)
    {
        print "Cannot connect socket!?"."\n";
        // 終わり
        exit -1;
    }
    // --------------------------------
    
    // 戻る
    return $BAN4IPD_CONF;
}
?>
<?php
// ----------------------------------------------------------------------
// Sub Routine
// ----------------------------------------------------------------------
function ban4ip_manualunban($BAN4IPD_CONF, $BAN4IPC_OPTIONS)
{
    // オプションを検査
    $BAN4IPD_CONF = ban4ip_optioncheck($BAN4IPD_CONF, $BAN4IPC_OPTIONS);
    // UNBANする
    $BAN4IPD_CONF = ban4ip_unban($BAN4IPD_CONF);
    // 親プロセスにログメッセージを送信
    ban4ip_sendmsg($BAN4IPD_CONF);
}
?>
<?php
// ----------------------------------------------------------------------
// Sub Routine
// ----------------------------------------------------------------------
function ban4ip_manualban($BAN4IPD_CONF, $BAN4IPC_OPTIONS)
{
    
    // オプションを検査
    $BAN4IPD_CONF = ban4ip_optioncheck($BAN4IPD_CONF, $BAN4IPC_OPTIONS);
    // BANする
    $BAN4IPD_CONF = ban4ip_ban($BAN4IPD_CONF);
    // 親プロセスにログメッセージを送信
    ban4ip_sendmsg($BAN4IPD_CONF);
}
?>
<?php
// ----------------------------------------------------------------------
// Sub Routine
// ----------------------------------------------------------------------
function ban4ip_banlist($BAN4IPD_CONF)
{
    printf("%-39s %-16s %-10s %-6s %s",'IP Address','Service','Port','Rule','Until');
    print "\n";
    
    // BANデータベース内の全データを取得
    $RESULT = $BAN4IPD_CONF['ban_db']->query("SELECT * FROM ban_tbl");
    // データがあったら表示する
    while ($DB_DATA = $RESULT->fetch(PDO::FETCH_ASSOC))
    {
        printf("%-39s %-16s %-10s %-6s %s",$DB_DATA['address'],$DB_DATA['service'],$DB_DATA['port'],$DB_DATA['rule'],date("Y/m/d H:i:s",$DB_DATA['unbandate']));
        print "\n";
    }
}
?>
<?php
// ----------------------------------------------------------------------
// Main Routine
// ----------------------------------------------------------------------
// --------------------------------
// コマンドラインオプションを解析(その一)
// --------------------------------
// 短いオプション(無し)
$BAN4IPC_SHORTOPT = "";

// 長いオプション
$BAN4IPC_LONGOPT  = array(
    "ban",                    // 値は要らない
    "unban",                  // 値は要らない
    "address:",               // 値が必須
    "bantime:",               // 値が必須([s]、指定が無ければconfigのデフォルト値)
    "port:",                  // 値が必須、指定が無ければall)
    "protcol:",               // 値が必須、指定が無ければall
    "rule:",                  // 値が必須
    "service:",               // 値が必須(サービスの指定が無ければmanualというサービス名にする :-)
);

// コマンドラインオプションを解析
$BAN4IPC_OPTIONS = getopt($BAN4IPC_SHORTOPT, $BAN4IPC_LONGOPT);

// 第一引数による処理分岐
switch($argv[1])
{
    case "start" :
        // ban4ipdを起動
        exec(__DIR__.'/ban4ipd > /dev/null &');
        print 'ban4ipd start ... Please check LOG file.'."\n";
        // 終わり
        exit;
    case "stop" :
        // ban4ipdプロセスをすべてkillする
        exec('/usr/bin/killall ban4ipd');
        // 少し待ってから
        usleep(100000);
        // PIDファイルがあれば
        if (is_file($BAN4IPD_CONF['pid_file']))
        {
            // PIDファイルを削除する
            unlink($BAN4IPD_CONF['pid_file']);
        }
        // ソケットファイルがあれば
        if (is_executable($BAN4IPD_CONF['socket_file']))
        {
            // ソケットファイルを削除する
            unlink($BAN4IPD_CONF['socket_file']);
        }
        print 'ban4ipd stop'."\n";
        // 終わり
        exit;
    case "restart" :
        // ban4ipdプロセスをすべてkillする
        exec('/usr/bin/killall ban4ipd');
        // 少し待ってから
        usleep(100000);
        // PIDファイルがあれば
        if (is_file($BAN4IPD_CONF['pid_file']))
        {
            // PIDファイルを削除する
            unlink($BAN4IPD_CONF['pid_file']);
        }
        // ソケットファイルがあれば
        if (is_executable($BAN4IPD_CONF['socket_file']))
        {
            // ソケットファイルを削除する
            unlink($BAN4IPD_CONF['socket_file']);
        }
        // ban4ipdを起動
        exec(__DIR__.'/ban4ipd > /dev/null &');
        print 'ban4ipd restart ... Please check LOG file.'."\n";
        // 終わり
        exit;
    case "reload" :
        // ban4ipdプロセスをすべてkillする
        exec('/usr/bin/killall -s SIGHUP ban4ipd');
        print 'ban4ipd reload ... Please check LOG file.'."\n";
        // 終わり
        exit;
    case "list" :
        // BANしているIPアドレスの一覧を出力
        ban4ip_banlist($BAN4IPD_CONF);
        // 終わり
        exit;
}

// もし --ban パラメータがついていたなら
if (isset($BAN4IPC_OPTIONS['ban']))
{
    // 手動でBANする
    ban4ip_manualban($BAN4IPD_CONF, $BAN4IPC_OPTIONS);
    // 終わり
    exit;
}
// もし --unban パラメータがついていたなら
if (isset($BAN4IPC_OPTIONS['unban']))
{
    // 手動でUNBANする
    ban4ip_manualunban($BAN4IPD_CONF, $BAN4IPC_OPTIONS);
    // 終わり
    exit;
}

// --------------------------------
// 上記以外はヘルプメッセージを表示して終わり
// --------------------------------
print <<<EOF

BAN for IP controller (ban4ipc)

Usage:

   ban4ipc start    ... ban4ipd start.
   ban4ipc stop     ... ban4ipd stop.
   ban4ipc restart  ... ban4ipd stop and start.
   ban4ipc reload   ... reload config file. (not unban existing settings).
   ban4ipc list     ... output banned IPs list.

   ban4ipc --ban --address <IP> --rule [DROP|REJECT|LOG] [--service <SERVICE>] (same as "--protcol all --port all")
   ban4ipc --ban --address <IP> --protcol [tcp|udp|all] --port [0-65535|all] --rule [DROP|REJECT|LOG] [--service <SERVICE>]

   ban4ipc --unban --address <IP> --rule [DROP|REJECT|LOG] [--service <SERVICE>] (same as "--protcol all --port all")
   ban4ipc --unban --address <IP> --protcol [tcp|udp] --port [0-65535] --rule [DROP|REJECT|LOG] [--service <SERVICE>]
       
       <IP>         ... IPv4 or IPv6 address. (same LOGs format)
       <SERVICE>    ... set "target_service" name to ban4ipd's log.

T.Kabu/MyDNS.JP     http://www.mydns.jp/


EOF;
?>
